关于babel转码器环境的配置：
1、首先在node.js里面输入命令：npm install -g babel-cli(node.js随便安装在哪个硬盘里，以及babel-cli也是，一般跟着node.js的路径)
2、安装转码器的插件preset-es2015(这个包含了所有插件)，接着上一步输入npm install --save babel-preset-es2015(这个插件的位置是有讲究的，假如你安装在D盘，那么以后你用ES2016编写的js代码的文件（比如es6.js）就应该保存在这个位置，否则转码无效)
3、转码：babel es6.js --presets es2015
---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
4|、为了第三步能够直接写成babel es6.js,需要新建一个.babelrc的配置文件，但是这个文件不能直接在D盘里面用鼠标右键新建，需要在安装转码插件的文件路径里打开cmd,也就是在cmd里切换到上面假设的D盘的位置，然后输入： type nul>.babelrc
5、会看到该文件路径下生成了一个.babelrc的文件（上面假设安装转码插件的路径）
6、打开.babelrc文件，在里面写入：
    {
    	"presets": ['es2015']
    }
7、保存后，再重新在node中输入babel es6.js便可以转码成功，就不用写成babel es6.js --presets es2015啦
=====================================================================================================================
=====================================================================================================================
=====================================================================================================================

babel常用命令：
1、转换es6.js文件并在当前命名行窗口中输出转换结果
   babel es6.js

2、将es6.js装换后的结果输出到es5.js文件中，使用-o或者--out-file命令
   babel es6.js -o es5.js
   babel es6.js --out-file es5.js

3、实时监控es6.js,一有变化就重新编译，使用-w或者--watch
   babel es6.js -w --out-file es5.js
   babel es6.js --watch --out-file es5.js

4、编译整个src文件夹并输出到lib文件夹中，使用-d或--out-dir
   babel src -d lib
   babel src --out-dir lib

5、编译整个src文件夹并输出到一个文件夹es5.js中
   babel src --out-file es5.js

6、直接输入babel-node命令，可以在命令行中运行es6代码,直接输出计算结果
   babel-node
